package com.evaradrip.commerce.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class ProductImageAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertProductImageAllPropertiesEquals(ProductImage expected, ProductImage actual) {
        assertProductImageAutoGeneratedPropertiesEquals(expected, actual);
        assertProductImageAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertProductImageAllUpdatablePropertiesEquals(ProductImage expected, ProductImage actual) {
        assertProductImageUpdatableFieldsEquals(expected, actual);
        assertProductImageUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertProductImageAutoGeneratedPropertiesEquals(ProductImage expected, ProductImage actual) {
        assertThat(actual)
            .as("Verify ProductImage auto generated properties")
            .satisfies(a -> assertThat(a.getId()).as("check id").isEqualTo(expected.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertProductImageUpdatableFieldsEquals(ProductImage expected, ProductImage actual) {
        assertThat(actual)
            .as("Verify ProductImage relevant properties")
            .satisfies(a -> assertThat(a.getImageUrl()).as("check imageUrl").isEqualTo(expected.getImageUrl()))
            .satisfies(a -> assertThat(a.getAltText()).as("check altText").isEqualTo(expected.getAltText()))
            .satisfies(a -> assertThat(a.getIsPrimary()).as("check isPrimary").isEqualTo(expected.getIsPrimary()))
            .satisfies(a -> assertThat(a.getDisplayOrder()).as("check displayOrder").isEqualTo(expected.getDisplayOrder()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertProductImageUpdatableRelationshipsEquals(ProductImage expected, ProductImage actual) {
        assertThat(actual)
            .as("Verify ProductImage relationships")
            .satisfies(a -> assertThat(a.getProduct()).as("check product").isEqualTo(expected.getProduct()));
    }
}
