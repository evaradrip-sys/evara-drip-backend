package com.evaradrip.commerce.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class CartAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertCartAllPropertiesEquals(Cart expected, Cart actual) {
        assertCartAutoGeneratedPropertiesEquals(expected, actual);
        assertCartAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertCartAllUpdatablePropertiesEquals(Cart expected, Cart actual) {
        assertCartUpdatableFieldsEquals(expected, actual);
        assertCartUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertCartAutoGeneratedPropertiesEquals(Cart expected, Cart actual) {
        assertThat(actual)
            .as("Verify Cart auto generated properties")
            .satisfies(a -> assertThat(a.getId()).as("check id").isEqualTo(expected.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertCartUpdatableFieldsEquals(Cart expected, Cart actual) {
        assertThat(actual)
            .as("Verify Cart relevant properties")
            .satisfies(a -> assertThat(a.getSessionId()).as("check sessionId").isEqualTo(expected.getSessionId()))
            .satisfies(a -> assertThat(a.getStatus()).as("check status").isEqualTo(expected.getStatus()))
            .satisfies(a -> assertThat(a.getExpiresAt()).as("check expiresAt").isEqualTo(expected.getExpiresAt()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertCartUpdatableRelationshipsEquals(Cart expected, Cart actual) {
        // empty method
    }
}
